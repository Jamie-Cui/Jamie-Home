---
layout: page
title:  "面试笔记"
date:   2018-11-14 13:00:00 +0000
categories: jekyll update
---
{% include add_favicon.html %}
{% include add_views.html %}

# Bitcoin/Etherum
公链，矿工自愿参与不需要授权，属于无门槛分布式系统。

从抽象的角度来说，如果Alice想要和Bob进行一笔比特币的转账，那么Alice会生成一条转账包含以下内容：收款人（Bob）的地址、转账比特币数量、以及Alice对自己账户余额的证明。接下来Alice将该转账信息（我们可以记作“未确认转账”）广播到比特币网络中，广播中的节点受到转账信息后验证转账的正确性并将正确的转账信息继续广播。在广播过程中，Alice的数字签名保障了转账信息的完整性（integrity）以及不可否认性（non-repudiation），因此我们可以认为比特币网络中的节点都可以安全的接收到Alice的转账信息，前提是Alice的公钥是全网知晓。接下来，矿工们就要进行努力工作将转账信息“写”入账本了，在下面一个小节我们会详细讨论这个过程。

## 从矿工的角度来思考 | 共识协议
上一个小节我们讲到了Alice想要和Bob进行转账，Alice成功将拥有自己数字签名的“未确认转账”广播到了比特币网络中，而接下来网络中的矿工需要进行挖矿将转账这条记录写入账本。比特币网络的入门门槛很低，我们不得不考虑网络中恶意矿工问题，也就是我们如何才能保证矿工诚实得进行挖矿工作呢？

“共识”是指分布式网络中的节点达成一致的过程，在传统的分布式网络中共识协议有Paxos等，而比特币、以太坊等创造了新的共识协议PoW、PoS等，我们知道比特币网络是P2P分布式网络，不存在全网公共信任的第三方机构组织，因此我们需要保证“账本”（也就是区块链）在全网中的一致性，而共识协议可以保证在网络中有矿工作恶时诚实的矿工依然不会受到影响并且总帐全网一致。

比特币网络对于矿工有两个激励机制：创建“块”的固定工资（但是随时间递减），每个块中有一个固定的域矿工可以填上自己的公钥来接收固定工资；其次是转账人付给矿工的转账费(转账人自愿支付从转账的钱里面扣除)。从博弈论的角度来说，我们抽象得认为矿工具有两个策略诚实或者作恶，在设计区块链的共识协议时，我们要保证：
- 激励协议是主导策略 Dominant Strategy，遵从协议获取最大利益
- 激励协议是纳什平衡 Nash Equilibrium，在所有人遵循协议时，违反协议利益受损

### PoW工作量证明
比特币的工作量证明（PoW）：抽象算法：H(previous_hash, nonce) > target，求nonce。对于每个矿工来说，接收到Alice转账信息后即开始计算满足上述不等式的nonce数值，成功计算出来的矿工会将自己生成的“块”广播到网络中，其余矿工可以验证“块”的正确性并选择接受或者不接受（恶意矿工行为）。

> 注意：我们接下来讨论的恶意矿工问题都基于矿工利用其他方式（非暴力破解运算）来提升自己获得块发布权力的概率，而并不是修改转账内容。

但是，比特币网络是异步分布式系统，也就是说，存在一种情况网络中两个诚实节点（A和B）同时计算出了自己的nonce值（并不是完全相同的“块”）并且广播到网络中，造成了网络中分为两派接受了不同的但是均正确的“块”，这就叫做区块链的“分叉”问题。我们认为在网络接受A的“块”的节点和接受B的“块”的节点数量不同，而由于解决PoW的能力和计算能力也就是矿工的数量成正比，终究两条区块链会出现长度上的区别，当矿工们在交换消息发现一条更长的链时，就会舍弃短链继承长链。实际上比特币会继承“difficulty”更大的链。

下图显示了比特币中的“块”头部结构。

<img src="{{site.url}}{{site.baseurl}}/img/bitcoin-blockheader.png" alt="Drawing" style="width: 600px;"/>

我们可以看到头部文件中有Merkle Hash Tree Root，在生成块的过程中矿工会将每笔转账的Hash值构建成一个Merkle Tree用来快速查询。我们假设有a，b，c，d，e，5笔转账如果我们简单的使用Hash链我们会得到H(H(H(H(Ha||Hb)||Hc)||Hd)||He)，那么 网络中矿工们在使用P2P下载并且验证转账信息是否相同时（例如钱包节点，不挖矿，之从网络中同步区块链），如果root相同，验证成功，如果root不同计算LR节点继续验证，知道找到不同信息为止。而Hash链需要遍历所有节点才可以找到错误信息。
因此我们可以总结以下：矿工们首先会构建自己的“块”，填入块中包含转账Hash值构成的Merkle Tree的Root值，填入自己运行比特币协议版本、当前时间和自己区块链账本中前一个Hash值。在计算出Nonce时矿工会将difficulty填入比特币的Bit域，并且填入自己的pub key证明自己挖出来的矿。之后获胜的矿工会将该“块”广播到网络中，诚实的矿工会验证头文件中信息的正确性并且接受该块。

**问题：Difficulty和Target是如何计算的？写在比特币协议中。**

### PoS权益证明

抽象算法： 

### Paxos

